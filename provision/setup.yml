- hosts: all
  become: true
  collections:
    - jerryshockley.rails
  vars_files:
    - group_vars/all_vars/all.yml
    - group_vars/all_vars/vault.yml

  tasks:
    - ansible.builtin.include_tasks:
        file: tasks/install_and_update_packages.yml 
      vars:
        package_list:
          - aptitude
          - git
          - neovim
          - sudo
          - redis-server
          - python3.11
          - python3-pip
          - libpq-dev  # Provides pg_config used by postgresql role
          - libcurl4
          - libcurl4-openssl-dev # For Passenger build
          - libpcre3
          - libpcre3-dev 
    
    - name: Adding System users
      ansible.builtin.include_tasks:
        file: tasks/add_users.yml
      when: ansible_user != "vagrant"

    - name: Securing Server
      ansible.builtin.include_tasks:
        file: tasks/secure_server.yml
      when: ansible_user != "vagrant"
    
    - name: Create bash user config files
      ansible.builtin.file:
        path: "/home/{{ privileged_user }}/{{ item }}"
        state: touch
        owner:  "{{ privileged_user }}"
        group:   "{{ privileged_user }}"
        mode: "0770"
      loop:
        - .bashrc
        - .bash_profile
      when: ansible_user != "vagrant"

    - name: Set permanent environment variable #Gets read at login and logout
      ansible.builtin.lineinfile:
        dest: "/home/{{ app_user }}/.bashrc"
        state: present
        regexp: "^{{ item.env_name}}="
        line: "{{ item.env_name}}={{ item.env_value }}"
      loop:
        - { env_name: 'RAILS_ENV', env_value: "{{ app_environment }}" }
         # requiired by webpack
        - { env_name: 'NODE_OPTIONS', env_value: '--openssl-legacy-provider' }

    - name: Configure .bashrc (RAILS_ENV) to be read for non-login shells
      ansible.builtin.lineinfile:
        dest: "/home/{{ app_user }}/.bash_profile"
        state: present
        owner: "{{ app_user }}"
        create: true
        search_string:  ". ~/.bashrc"
        line: ". ~/.bashrc"

    - name: Add aliases to .bashrc
      ansible.builtin.lineinfile:
        path: /home/{{ app_user }}/.bashrc
        state: present
        line: "{{ item }}"
      loop:
        - alias hh="cd /opt/www/iicreeks"
        - alias listen="sudo lsof  -Pi4TCP -sTCP:LISTEN"

    - name: Ensure Rails app folder exists.
      ansible.builtin.file:
        path: "{{ app_path }}"
        state: directory 
        owner: "{{ app_user }}"
        group: "{{ app_group }}"

    - name: Ensure Rails public folder exists for certbot.
      ansible.builtin.file:
        path: "{{ app_path }}/public"
        state: directory 
        owner: "{{ app_user }}"
        group: "{{ app_group }}"

    - ansible.builtin.include_role:
        name: logrotate

    - ansible.builtin.include_role:
        name: cimon-io.asdf
      vars:
        asdf_user: "{{ app_user }}"
        asdf_group: "{{ app_group }}"
        asdf_plugins:
          - name: ruby
            versions:
              - "{{ ruby_version }}"
            global: "{{ ruby_version }}"
          - name: nodejs
            versions:
              - "{{ node_version }}"
            global: "{{ node_version }}"

    - name: Update/Install npm & yarn package managers
      ansible.builtin.shell: /usr/bin/bash -lc "npm install -g {{ item }}"
      loop:
        - npm@latest
        - yarn@latest
      environment:
        PATH: /home/{{ app_user }}/.asdf/shims:/home/{{ app_user }}/.asdf/bin:/usr/local/sbin 
      become: true
      become_user: "{{ app_user }}"

    - name: asdf reshim nodejs
      ansible.builtin.shell: /usr/bin/bash -lc "asdf reshim nodejs"
      environment:
        PATH: /home/{{ app_user }}/.asdf/shims:/{{ app_user }}/vagrant/.asdf/bin:/usr/local/sbin 
      become: true
      become_user: "{{ app_user }}"

    - name: Update Gem package manager
      ansible.builtin.shell: bash -lc "gem update --system --no-document"
      become: true
      become_user: "{{ app_user }}"

    - name: Install global Ruby gems
      ansible.builtin.shell: /usr/bin/bash -lc "gem install {{ item }}"
      loop:
        - rake
        - rails -v '~> 7.0.4' 
      become: true
      become_user: "{{ app_user }}"

    - ansible.builtin.include_role:
        name: geerlingguy.passenger
      vars:
         passenger_server_name: localhost
         passenger_app_root: "{{ app_path }}/public"
         passenger_app_env: "{{app_environment}}"
         passenger_root: "/usr/lib/vendor_ruby/phusion_passenger/locations.ini"
         passenger_ruby: "{{ ruby_root_dir }}/bin/ruby"
      # when: ansible_user != "vagrant"

    - ansible.builtin.include_role:
        name: coopdevs.certbot_nginx
      vars:
        domain_name: 2creekscamas.org
        letsencrypt_email: "{{ admin_email }}"
      when: ansible_user != "vagrant"
    
    - name: Make sure psycopg2 is installed
      pip:
        name: psycopg2
        state: present
    
    - ansible.builtin.include_role:
        name: geerlingguy.postgresql
      vars:
        postgres_users_no_log: false
        postgresql_python_library: psycopg2

    - ansible.builtin.include_role:
        name: weareinteractive.ufw
    
    - ansible.builtin.include_role:
        name: hifis.unattended_upgrades