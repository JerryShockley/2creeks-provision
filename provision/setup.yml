- hosts: all
  become: true
  collections:
    - jerryshockley.rails
  vars:
    install: yes
    setup: yes

  tasks:
    - name: Set permanent rails environment variable #Gets read at login and logout
      ansible.builtin.lineinfile:
        dest: "/home/{{ app_user }}/.bashrc"
        state: present
        regexp: "^RAILS_ENV="
        line: "RAILS_ENV={{ app_environment }}"

    - name: Configure .bashrc (RAILS_ENV) to be read for non-login shells
      ansible.builtin.lineinfile:
        dest: "/home/{{ app_user }}/.bash_profile"
        state: present
        owner: "{{ app_user }}"
        create: true
        search_string:  ". ~/.bashrc"
        line: ". ~/.bashrc"

    - name: Update Package Cache
      ansible.builtin.apt:
        name: aptitude
        state: present
        force_apt_get: true
        update_cache: true
        cache_valid_time: 3600

    - name: Common Packages
      ansible.builtin.apt:
        name:
          - git
          - neovim
          - sudo
          - redis-server
          - python3-dev
          - python3-pip
          - libpq-dev  # Provides pg_config used by postgresql role
        state: present

    - name: Upgrade All Packages
      ansible.builtin.apt:
        upgrade: "safe"

    - name: Create Ansible tmp directory
      ansible.builtin.file:
        path: /root/.ansible/tmp
        state: "directory"
        mode: '0777'

    - name: Check if reboot is required
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_file

    - name: Reboot if required
      ansible.builtin.reboot:
      when: reboot_file.stat.exists

    - name: Remount shared files if using vagrant
      ansible.builtin.command: mount -a
      when: ansible_user == 'vagrant'

    - name: Adding System users
      ansible.builtin.include_tasks:
        file: tasks/add_users.yml
      when: ansible_user != "vagrant"

    - name: Securing Server
      ansible.builtin.include_tasks:
        file: tasks/secure_server.yml
      when: ansible_user != "vagrant"

    - ansible.builtin.include_role:
        name: logrotate

    - ansible.builtin.include_role:
        name: cimon-io.asdf
      vars:
        asdf_user: "{{ app_user }}"
        asdf_group: "{{ app_group }}"
        asdf_plugins:
          - name: ruby
            versions:
              - "{{ ruby_version }}"
            global: "{{ ruby_version }}"

    - ansible.builtin.include_role:
        name: geerlingguy.pip
      vars:
        pip_install_packages:
          - name: wheel
            state: latest
          - name: pyscopg2
            state: latest

    - ansible.builtin.include_role:
        name: geerlingguy.passenger
      vars:
         passenger_server_name: localhost
         passenger_app_root: "{{ app_path }}/public"
         passenger_app_env: "{{app_environment}}"
         passenger_root: "/usr/lib/vendor_ruby/phusion_passenger/locations.ini"
         passenger_ruby: "{{ ruby_root_dir }}/bin/ruby"
    
    - ansible.builtin.include_role:
        name: nodejs
    
    - ansible.builtin.include_role:
        name: geerlingguy.postgresql
      vars:
        postgres_users_no_log: false
        postgresql_python_library: psycopg2

    - ansible.builtin.include_role:
        name: weareinteractive.ufw
    
    - ansible.builtin.include_role:
        name: hifis.unattended_upgrades

    - name: Ensure Rails app folder exists.
      ansible.builtin.file:
        path: "{{ app_path }}"
        state: directory 
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
